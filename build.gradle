plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'com.adarshr.test-logger' version '3.2.0'
	id 'java'
	id 'war'
}

group = 'ar.edu.unq.desapp.grupoo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate:hibernate-validator:8.0.0.CR3'
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.22'
    compileOnly 'com.github.jsimone:webapp-runner:9.0.27.1'
	testImplementation 'junit:junit:4.13.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.2'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
	testImplementation('org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE') {
		exclude group: 'junit'
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

configurations.compileOnly.setCanBeResolved(true)


task webapp(type: Copy) {
    into "$buildDir/server"
    from(configurations.compileOnly) {
        include "webapp-runner*"
    }
}

war.mustRunAfter clean
build.mustRunAfter war
webapp.mustRunAfter war

task stage( dependsOn: [clean, build, war, webapp] )

tasks.named('test') {
	useJUnitPlatform()
    testLogging.showStandardStreams = true
}
